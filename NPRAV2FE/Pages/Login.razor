@page "/login"
@layout LoginLayout
@inject ApiService MyApiService
@inject NavigationManager Navigation
@inject CustomAuthStateProvider AuthStateProvider
@using System.Net.Http
@using System.Text
@using System.Text.Json

<head>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title text-center">Login</h3>
                    <div class="form-group">
                        <label for="username">Username</label>
                        <input type="text" class="form-control" id="username" @bind="username" autocomplete="off" />
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" class="form-control" id="password" @bind="password" autocomplete="off" />
                    </div>
                    <button class="btn btn-primary btn-block" @onclick="SendPostRequest">Submit</button>
                    <a href="/forgotpassword" class="d-block mt-3 text-center">Forgot Password?</a>
                    <p class="mt-3 text-center">@postResponse</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string username;
    private string password;
    private string postResponse;

    private async Task SendPostRequest()
    {
        if (!string.IsNullOrEmpty(username) && !string.IsNullOrEmpty(password))
        {
            var loginRequest = new { Username = username, Password = password };
            string jsonInput = JsonSerializer.Serialize(loginRequest);
            var content = new StringContent(jsonInput, Encoding.UTF8, "application/json");

            try
            {
                var response = await MyApiService.Login(content);

                if (response.IsSuccessStatusCode)
                {
                    var responseContent = await response.Content.ReadAsStringAsync();

                    try
                    {
                        var loginResult = JsonSerializer.Deserialize<LoginResult>(responseContent, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

                        if (loginResult?.User != null)
                        {
                            await AuthStateProvider.MarkUserAsAuthenticated(loginResult.User.Username, loginResult.User.Roles, loginResult.User.EmployeeId, loginResult.User.Id.ToString());
                            postResponse = "Login successful!";
                            Navigation.NavigateTo("/HomePage");
                        }
                        else
                        {
                            postResponse = "Invalid UserName or Password.";
                        }
                    }
                    catch (JsonException jsonEx)
                    {
                        postResponse = $"JSON Error: {jsonEx.Message}";
                    }
                }
                else
                {
                    var errorResponse = await response.Content.ReadAsStringAsync();
                    postResponse = $"Error: {errorResponse}";
                }
            }
            catch (HttpRequestException ex)
            {
                postResponse = $"Error: {ex.Message}";
            }
        }
        else
        {
            postResponse = "Please enter both username and password.";
        }
    }

    private class LoginResult
    {
        public string Message { get; set; }
        public string UserRole { get; set; }
        public User User { get; set; }
    }

    private class User
    {
        public int Id { get; set; }
        public string EmployeeId { get; set; }
        public string EmployeeName { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Gender { get; set; }
        public int Age { get; set; }
        public string Designation { get; set; }
        public string Email { get; set; }
        public string PhoneNumber { get; set; }
        public string Username { get; set; }
        public string Password { get; set; }
        public string ReenterPassword { get; set; }
        public string Roles { get; set; }
    }
}
