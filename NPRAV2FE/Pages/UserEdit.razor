@page "/EditUser/{id:int}"
@inject ApiService MyApiService
@inject NavigationManager Navigation
@using System.Text.Json
@using System.Threading.Tasks
@inject CustomAuthStateProvider AuthStateProvider


<h1>Edit User</h1>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h1 class="card-title text-center">Modify User</h1>
                    <EditForm Model="@user" OnValidSubmit="@EditUser">
                        <DataAnnotationsValidator />
                        <div class="form-group">
                            <label for="employeeId">Employee ID</label>
                            <InputText id="employeeId" class="form-control" @bind-Value="user.EmployeeId" readonly="readonly" />
                        </div>
                        <div class="form-group">
                            <label for="employeeName">Employee Name</label>
                            <InputText id="employeeName" class="form-control" @bind-Value="user.EmployeeName" required />
                        </div>
                        <div class="form-group">
                            <label for="firstName">First Name</label>
                            <InputText id="firstName" class="form-control" @bind-Value="user.FirstName" required />
                        </div>
                        <div class="form-group">
                            <label for="lastName">Last Name</label>
                            <InputText id="lastName" class="form-control" @bind-Value="user.LastName" required />
                        </div>
                        <div class="form-group">
                            <label for="gender">Gender</label>
                            <InputSelect id="gender" class="form-control" @bind-Value="user.Gender" required>
                                <option value="">Select Gender</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Other">Other</option>
                            </InputSelect>
                        </div>
                        <div class="form-group">
                            <label for="age">Age</label>
                            <InputNumber id="age" class="form-control" @bind-Value="user.Age" required />
                        </div>
                        <div class="form-group">
                            <label for="designation">Designation</label>
                            <InputText id="designation" class="form-control" @bind-Value="user.Designation" required />
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="user.Email" type="email" required />
                        </div>
                        <div class="form-group">
                            <label for="phoneNumber">Phone Number</label>
                            <InputText id="phoneNumber" class="form-control" @bind-Value="user.PhoneNumber" required />
                        </div>
                        <div class="form-group">
                            <label for="username">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="user.Username" required />
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <InputText id="password" class="form-control" @bind-Value="user.Password" type="password" />
                        </div>
                        <div class="form-group">
                            <label for="reenterPassword">Re-enter Password</label>
                            <InputText id="reenterPassword" class="form-control" @bind-Value="user.ReenterPassword" type="password" />
                        </div>
                        <div class="form-group">
                            <label for="roles">Role</label>
                            <InputSelect id="roles" class="form-control" @bind-Value="user.Roles" required>
                                <option value="">Select Role</option>
                                <option value="Admin">Admin</option>
                                <option value="Management">Management</option>
                                <option value="User">User</option>
                            </InputSelect>
                        </div>
                        <button type="submit" class="btn btn-primary btn-block mt-3">Update User</button>
                        <button class="btn btn-secondary mt-3 ml-2" @onclick="GoBack">Back</button>
                    </EditForm>
                    <p class="mt-3">@editUserResponse</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private User user = new User();
    private string editUserResponse;

    protected override async Task OnInitializedAsync()
    {
        await AuthStateProvider.RedirectIfUserRoleEmpty();
        try
        {
            var response = await MyApiService.GetUserDetails(Id);
            if (response != null)
            {
                user = JsonSerializer.Deserialize<User>(response, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
                // Clear the password fields to avoid showing hashed passwords
                user.Password = string.Empty;
                user.ReenterPassword = string.Empty;
            }
        }
        catch (Exception ex)
        {
            editUserResponse = $"Error fetching user details: {ex.Message}";
        }
    }

    private async Task EditUser()
    {
        if (user.Password != user.ReenterPassword)
        {
            editUserResponse = "Passwords do not match.";
            return;
        }

        var requestBody = JsonSerializer.Serialize(user);
        var response = await MyApiService.EditUser(Id, requestBody);

        if (!string.IsNullOrEmpty(response))
        {
            editUserResponse = "User Updated successfully!";
            Navigation.NavigateTo("/UserList");
        }
        else
        {
            editUserResponse = "Failed to edit user. Please try again.";
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/UserList");
    }

    private class User
    {
        public int Id { get; set; }
        public string EmployeeId { get; set; }
        public string EmployeeName { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Gender { get; set; }
        public int Age { get; set; }
        public string Designation { get; set; }
        public string Email { get; set; }
        public string PhoneNumber { get; set; }
        public string Username { get; set; }
        public string Password { get; set; }
        public string ReenterPassword { get; set; }
        public string Roles { get; set; }
    }
}
